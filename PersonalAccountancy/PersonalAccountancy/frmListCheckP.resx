<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAPhSURBVFhHrVdbbAxhFF4JQasuuzNL6So6M7utSMTW
        LRFSfRGXIEIrEUE8IMIDD16QiKA8EC8S8YRE0idePFFsZ/bW3W1L26y20YvSpk2zvW1bLMc5k+522+5c
        mWSSdubM+b7z/ee2FouJy++0lUhO5pnI27p9Agsib28RBfs9SbC5TLjT94lXYK4hWKLeZYeAkwUvAqff
        RCSIz+k9EunxOdlD+jxrWHl59gE5JYDpoGr/+9E+7CQy9gOmiASK2GXhDJEaIUG2Abwlgf1qiASyLq3F
        qI2CqdmTGs2cZa4mEY/A7iLj/wme9FWHQb3mOGUSgXx2WcRE5FKBFcT8HBAd2SCtXgRenlEMoAaDU1SB
        XhqJ3FeYC82XzkDMUwU/+/vg9/gYjLW1wvenj6F29zaQOJuSv8gMEhLPPDICLnFWGO/qBLoSw8NQf7AU
        wjvWQ/Pls/Izumq2FmYkQInpddrXTSERNiF9e8V1+DUYg0jpxhSQVLAEup8/kQmIK3OUFeWZeIoAlslN
        I9EnbYObnPCzrxcINFjMQ+OJQwi6AGq2uCaeWxUJUDMLrl3ukEmgwz9mCFDi0YXHl5I9Hm2E1isXoP3e
        Dc18kjj2tUyAOp0ZAtV5WTD6pQV8zqUw1tkuk2g6dRiGIkGo2ezS9Em9xkJNJ1Nv1yIkOrJg/HuXDNpw
        bD98sM2C9wst4GFmwZ/fCfDYZ2sSoL5gwZ79QrWD7XRD9PxJ+HzxtOywesV8rPmFMNL4MSV7pj9+DQ6A
        tAp7gsoMkXuCyDP9ikZ4tgPe9yn/DUf3qoJOfxkuLVYlQAOOElCtVCBWXZXy+6lst24Cw/UR7IqLNY8B
        c4DtUFMg5nk7SaB8j24CZBgs5lQJ0Mi2+Hj2vjqBN2kE9CtAH/lcS1UJ0NBDAtZC2mQyksAcmKKAgSNo
        u31VU34qf7kPfFTqA0QgPQfK9Ssw0lCnOhUpYDyChExAFNgBZQUmj6BBZw603bkml6pWL8Hd8eFEK2aO
        ZNz5UIHBgJjKgbp922mKQfTccUjE44oJ2fuyUhM8hH7e5efPSw2kkEIe0LLhX5eHtwPn++RwEfOyIVyy
        AXoqn8FoS1Tuij+6v8EIzgKvjtaOqjdNGceiwJQZ3XxliVElqneSnG5pjXbtU/aHcnOzZiwlPo79pnVu
        //qegsQfNRWKa5mZndAgqQ7VzfhdEbuAppRBp7rsUeEhzbWcDEJuyxyjC6oaYZLdL9hadYGnGyHjIJXL
        v6hBamK93zIMnvyAtlccWINGiRAwzplwyO2eYxo8/cMPBUscuPu9iqAi5JyOKFm2yR+i8mrHswlJYO7q
        Bf4LbyiF6ZFTF6EAAAAASUVORK5CYII=
</value>
  </data>
</root>